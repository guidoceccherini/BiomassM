Hex_with_biomass <- merge(Hex_italy, hex_summary_total, by = "hex_ID", all.x = TRUE)
st_write(Hex_with_biomass, "grid_forest_with_biomass.gpkg", delete_dsn = TRUE)
# Plot density for an example hexagon
example_hex_ID <- Hex$hex_ID[1]
biomass_df_hex <- as.data.frame(biomass_hex_dt[hex_ID == example_hex_ID])
# Plot density for an example hexagon
example_hex_ID <- Hex_italy$hex_ID[1]
biomass_df_hex <- as.data.frame(biomass_hex_dt[hex_ID == example_hex_ID])
if(nrow(biomass_df_hex) > 0) {
p_hex <- ggplot(biomass_df_hex, aes(x = biomass, fill = forest_type_label)) +
geom_density(alpha = 0.5) +
labs(title = paste("Biomass Distribution - Hexagon", example_hex_ID),
subtitle = paste("n =", format(nrow(biomass_df_hex), big.mark = ",")),
x = "Biomass (Mg/ha)", y = "Density", fill = "Forest Type") +
theme_minimal() +
scale_fill_manual(values = c("Broadleaf" = "#2E7D32",
"Needleleaf" = "#1565C0",
"Mixed Forest" = "orange"))
print(p_hex)
ggsave("example_hexagon_biomass_density.png", p_hex, width = 8, height = 5)
}
# Create map of total biomass by hexagon
library(tmap)
map_biomass <- tm_shape(Hex_with_biomass) +
tm_fill("total_biomass",
style = "quantile",
palette = "YlOrRd",
title = "Total Biomass\n(Mg/ha)") +
tm_borders(alpha = 0.3) +
tm_layout(title = "Total Disturbed Biomass by Hexagon",
legend.outside = TRUE)
print(map_biomass)
tmap_save(map_biomass, "biomass_by_hexagon_map.png", width = 10, height = 8)
# Optional: Create faceted plots by forest type
p_facet <- ggplot(as.data.frame(hex_summary),
aes(x = mean_biomass, fill = forest_type_label)) +
geom_histogram(bins = 50, alpha = 0.7) +
facet_wrap(~forest_type_label, scales = "free_y") +
labs(title = "Distribution of Mean Biomass Across Hexagons",
x = "Mean Biomass (Mg/ha)", y = "Number of Hexagons",
fill = "Forest Type") +
theme_minimal() +
scale_fill_manual(values = c("Broadleaf" = "#2E7D32",
"Needleleaf" = "#1565C0",
"Mixed Forest" = "orange"))
print(p_facet)
ggsave("hexagon_biomass_distribution_faceted.png", p_facet, width = 12, height = 6)
example_hex_ID
Hex_italy
example_hex_ID
biomass_df_hex
biomass_hex_dt
# Plot density for an example hexagon
example_hex_ID <- 10
biomass_df_hex <- as.data.frame(biomass_hex_dt[hex_ID == example_hex_ID])
if(nrow(biomass_df_hex) > 0) {
p_hex <- ggplot(biomass_df_hex, aes(x = biomass, fill = forest_type_label)) +
geom_density(alpha = 0.5) +
labs(title = paste("Biomass Distribution - Hexagon", example_hex_ID),
subtitle = paste("n =", format(nrow(biomass_df_hex), big.mark = ",")),
x = "Biomass (Mg/ha)", y = "Density", fill = "Forest Type") +
theme_minimal() +
scale_fill_manual(values = c("Broadleaf" = "#2E7D32",
"Needleleaf" = "#1565C0",
"Mixed Forest" = "orange"))
print(p_hex)
ggsave("example_hexagon_biomass_density.png", p_hex, width = 8, height = 5)
}
Hex_with_biomass
hex_summary
# 2. Summary statistics by hexagon and forest type
hex_summary <- biomass_hex_dt[, .(
n_pixels = .N,
mean_biomass = mean(biomass),
median_biomass = median(biomass),
sd_biomass = sd(biomass),
min_biomass = min(biomass),
max_biomass = max(biomass),
# total_biomass = sum(biomass)
), by = .(hex_ID, forest_type_label)]
fwrite(hex_summary, "biomass_by_hexagon_summary.csv")
# 3. Summary by hexagon (all forest types combined)
hex_summary_total <- biomass_hex_dt[, .(
n_pixels = .N,
mean_biomass = mean(biomass),
median_biomass = median(biomass),
# total_biomass = sum(biomass),
n_broadleaf = sum(forest_type == 1),
n_needleleaf = sum(forest_type == 2),
n_mixed = sum(forest_type == 3)
), by = hex_ID]
fwrite(hex_summary_total, "biomass_by_hexagon_total.csv")
# 4. Merge summary back to spatial hexagons for mapping
Hex_with_biomass <- merge(Hex_italy, hex_summary_total, by = "hex_ID", all.x = TRUE)
st_write(Hex_with_biomass, "grid_forest_with_biomass.gpkg", delete_dsn = TRUE)
# Plot density for an example hexagon
example_hex_ID <- 25#10
biomass_df_hex <- as.data.frame(biomass_hex_dt[hex_ID == example_hex_ID])
if(nrow(biomass_df_hex) > 0) {
p_hex <- ggplot(biomass_df_hex, aes(x = biomass, fill = forest_type_label)) +
geom_density(alpha = 0.5) +
labs(title = paste("Biomass Distribution - Hexagon", example_hex_ID),
subtitle = paste("n =", format(nrow(biomass_df_hex), big.mark = ",")),
x = "Biomass (Mg/ha)", y = "Density", fill = "Forest Type") +
theme_minimal() +
scale_fill_manual(values = c("Broadleaf" = "#2E7D32",
"Needleleaf" = "#1565C0",
"Mixed Forest" = "orange"))
print(p_hex)
ggsave("example_hexagon_biomass_density.png", p_hex, width = 8, height = 5)
}
# Create map of total biomass by hexagon
library(tmap)
Hex_with_biomass2 <- merge(Hex_italy, hex_summary, by = "hex_ID", all.x = TRUE)
st_write(Hex_with_biomass2, "grid_forest_with_biomassType.gpkg", delete_dsn = TRUE)
Hex_with_biomass2
plot(Hex_with_biomass2)
st_write(Hex_with_biomass2, "grid_forest_with_biomassType.gpkg", delete_dsn = TRUE)
Hex_with_biomass2 <- Hex_with_biomass2 |> select(-hex_id)
st_write(Hex_with_biomass2, "grid_forest_with_biomassType.gpkg", delete_dsn = TRUE)
# 4. Merge summary back to spatial hexagons for mapping
Hex_with_biomass <- merge(Hex_italy, hex_summary_total, by = "hex_ID", all.x = TRUE)
Hex_with_biomass <- Hex_with_biomass |> select(-hex_id)
st_write(Hex_with_biomass, "grid_forest_with_biomass.gpkg", delete_dsn = TRUE)
Hex_with_biomass
map_biomass <- tm_shape(Hex_with_biomass) +
tm_fill("mean_biomass",
style = "quantile",
palette = "YlOrRd",
title = "Mean Biomass\n(Mg/ha)") +
tm_borders(alpha = 0.3) +
tm_layout(title = "Total Disturbed Biomass by Hexagon",
legend.outside = TRUE)
print(map_biomass)
tmap_save(map_biomass, "biomass_by_hexagon_map.png", width = 10, height = 8)
Hex_with_biomass2
Hex_with_biomass2 <- Hex_with_biomass2 |>
# remove NA
filter(!is.na(mean_biomass))
Hex_with_biomass2
map_biomass_facets <- tm_shape(hex_forest_types) +
tm_fill("total_biomass",
style = "quantile",
palette = "YlOrRd",
title = "Total Biomass\n(Mg/ha)") +
tm_borders(alpha = 0.3) +
tm_facets(sync = TRUE, ncol = 2, free.coords = FALSE) +
tm_layout(title = "Total Biomass by Forest Type",
legend.outside = TRUE)
map_biomass_facets <- tm_shape(Hex_with_biomass2) +
tm_fill("total_biomass",
style = "quantile",
palette = "YlOrRd",
title = "Total Biomass\n(Mg/ha)") +
tm_borders(alpha = 0.3) +
tm_facets(sync = TRUE, ncol = 2, free.coords = FALSE) +
tm_layout(title = "Total Biomass by Forest Type",
legend.outside = TRUE)
print(map_biomass_facets)
# Filter for only Broadleaf and Needleleaf
Hex_two_types <- Hex_with_biomass2 %>%
filter(forest_type_label %in% c("Broadleaf", "Needleleaf"))
# Create faceted map
map_biomass_two_facets <- tm_shape(Hex_two_types) +
tm_fill("total_biomass",
style = "quantile",
palette = "YlOrRd",
title = "Total Biomass\n(Mg/ha)") +
tm_borders(alpha = 0.3) +
tm_facets(by = "forest_type_label",
nrow = 1,
free.coords = FALSE) +
tm_layout(title = "Total Disturbed Biomass: Broadleaf vs Needleleaf",
legend.outside = TRUE,
panel.labels = c("Broadleaf", "Needleleaf"))
print(map_biomass_two_facets)
# Create faceted map
map_biomass_two_facets <- tm_shape(Hex_two_types) +
tm_fill("mean_biomass",
style = "quantile",
palette = "YlOrRd",
title = "Mean Biomass\n(Mg/ha)") +
tm_borders(alpha = 0.3) +
tm_facets(by = "forest_type_label",
nrow = 1,
free.coords = FALSE) +
tm_layout(title = "Total Disturbed Biomass: Broadleaf vs Needleleaf",
legend.outside = TRUE,
panel.labels = c("Broadleaf", "Needleleaf"))
print(map_biomass_two_facets)
tmap_save(map_biomass_two_facets, "biomass_broadleaf_needleleaf_map.png",
width = 12, height = 6)
# Optional: Create faceted plots by forest type
p_facet <- ggplot(as.data.frame(hex_summary),
aes(x = mean_biomass, fill = forest_type_label)) +
geom_histogram(bins = 50, alpha = 0.7) +
facet_wrap(~forest_type_label, scales = "free_y") +
labs(title = "Distribution of Mean Biomass Across Hexagons",
x = "Mean Biomass (Mg/ha)", y = "Number of Hexagons",
fill = "Forest Type") +
theme_minimal() +
scale_fill_manual(values = c("Broadleaf" = "#2E7D32",
"Needleleaf" = "#1565C0",
"Mixed Forest" = "orange"))
print(p_facet)
fwrite(biomass_hex_dt, "Data/biomass_by_hexagon_complete.csv")
# 2. Summary statistics by hexagon and forest type
hex_summary <- biomass_hex_dt[, .(
n_pixels = .N,
mean_biomass = mean(biomass),
median_biomass = median(biomass),
sd_biomass = sd(biomass),
min_biomass = min(biomass),
max_biomass = max(biomass),
# total_biomass = sum(biomass)
), by = .(hex_ID, forest_type_label)]
fwrite(hex_summary, "Data/biomass_by_hexagon_summary.csv")
hex_summary
hex_summary
fwrite(hex_summary, "Data/biomass_by_hexagon_summary.csv")
biomass_hex_dt
fwrite(biomass_hex_dt, "Data/biomass_by_hexagon_complete.csv")
# 2. Summary statistics by hexagon and forest type
hex_summary <- biomass_hex_dt[, .(
n_pixels = .N,
mean_biomass = mean(biomass),
median_biomass = median(biomass),
sd_biomass = sd(biomass),
min_biomass = min(biomass),
max_biomass = max(biomass),
# total_biomass = sum(biomass)
), by = .(hex_ID, forest_type_label)]
# 2. Summary statistics by hexagon and forest type
hex_summary <- biomass_hex_dt[, .(
n_pixels = .N,
mean_biomass = mean(biomass),
median_biomass = median(biomass),
sd_biomass = sd(biomass),
min_biomass = min(biomass),
max_biomass = max(biomass)
# total_biomass = sum(biomass)
), by = .(hex_ID, forest_type_label)]
fwrite(hex_summary, "Data/biomass_by_hexagon_summary.csv")
# 3. Summary by hexagon (all forest types combined)
hex_summary_total <- biomass_hex_dt[, .(
n_pixels = .N,
mean_biomass = mean(biomass),
median_biomass = median(biomass),
# total_biomass = sum(biomass),
n_broadleaf = sum(forest_type == 1),
n_needleleaf = sum(forest_type == 2),
n_mixed = sum(forest_type == 3)
), by = hex_ID]
fwrite(hex_summary_total, "Data/biomass_by_hexagon_total.csv")
# 4. Merge summary back to spatial hexagons for mapping
Hex_with_biomass <- merge(Hex_italy, hex_summary_total, by = "hex_ID", all.x = TRUE)
Hex_with_biomass <- Hex_with_biomass |> select(-hex_id)
st_write(Hex_with_biomass, "Data/grid_forest_with_biomass.gpkg", delete_dsn = TRUE)
Hex_with_biomass2 <- merge(Hex_italy, hex_summary, by = "hex_ID", all.x = TRUE)
Hex_with_biomass2 <- Hex_with_biomass2 |> select(-hex_id)
st_write(Hex_with_biomass2, "Data/grid_forest_with_biomassType.gpkg", delete_dsn = TRUE)
# Plot density for an example hexagon
example_hex_ID <- 25#10
biomass_df_hex <- as.data.frame(biomass_hex_dt[hex_ID == example_hex_ID])
if(nrow(biomass_df_hex) > 0) {
p_hex <- ggplot(biomass_df_hex, aes(x = biomass, fill = forest_type_label)) +
geom_density(alpha = 0.5) +
labs(title = paste("Biomass Distribution - Hexagon", example_hex_ID),
subtitle = paste("n =", format(nrow(biomass_df_hex), big.mark = ",")),
x = "Biomass (Mg/ha)", y = "Density", fill = "Forest Type") +
theme_minimal() +
scale_fill_manual(values = c("Broadleaf" = "#2E7D32",
"Needleleaf" = "#1565C0",
"Mixed Forest" = "orange"))
print(p_hex)
ggsave("example_hexagon_biomass_density.png", p_hex, width = 8, height = 5)
}
if(nrow(biomass_df_hex) > 0) {
p_hex <- ggplot(biomass_df_hex, aes(x = biomass, fill = forest_type_label)) +
geom_density(alpha = 0.5) +
labs(title = paste("Biomass Distribution - Hexagon", example_hex_ID),
subtitle = paste("n =", format(nrow(biomass_df_hex), big.mark = ",")),
x = "Biomass (Mg/ha)", y = "Density", fill = "Forest Type") +
theme_minimal() +
scale_fill_manual(values = c("Broadleaf" = "#2E7D32",
"Needleleaf" = "#1565C0",
"Mixed Forest" = "orange"))
print(p_hex)
ggsave("Data/example_hexagon_biomass_density.png", p_hex, width = 8, height = 5)
}
# Create map of total biomass by hexagon
library(tmap)
map_biomass <- tm_shape(Hex_with_biomass) +
tm_fill("mean_biomass",
style = "quantile",
palette = "YlOrRd",
title = "Mean Biomass\n(Mg/ha)") +
tm_borders(alpha = 0.3) +
tm_layout(title = "Total Disturbed Biomass by Hexagon",
legend.outside = TRUE)
print(map_biomass)
tmap_save(map_biomass, "Data/biomass_by_hexagon_map.png", width = 10, height = 8)
# Filter for only Broadleaf and Needleleaf
Hex_two_types <- Hex_with_biomass2 %>%
filter(forest_type_label %in% c("Broadleaf", "Needleleaf", "Mixed Forest"))
# Create faceted map
map_biomass_two_facets <- tm_shape(Hex_two_types) +
tm_fill("mean_biomass",
style = "quantile",
palette = "YlOrRd",
title = "Mean Biomass\n(Mg/ha)") +
tm_borders(alpha = 0.3) +
tm_facets(by = "forest_type_label",
nrow = 1,
free.coords = FALSE) +
tm_layout(title = "Total Disturbed Biomass: Broadleaf vs Needleleaf",
legend.outside = TRUE,
panel.labels = c("Broadleaf", "Needleleaf"))
# Create faceted map
map_biomass_two_facets <- tm_shape(Hex_two_types) +
tm_fill("mean_biomass",
style = "quantile",
palette = "YlOrRd",
title = "Mean Biomass\n(Mg/ha)") +
tm_borders(alpha = 0.3) +
tm_facets(by = "forest_type_label",
nrow = 1,
free.coords = FALSE) +
tm_layout(title = "Total Disturbed Biomass: Broadleaf vs Needleleaf",
legend.outside = TRUE,
panel.labels = c("Broadleaf", "Needleleaf", "Mixed Forest"))
print(map_biomass_two_facets)
tmap_save(map_biomass_two_facets, "Data/biomass_broadleaf_needleleaf_map.png",
width = 12, height = 6)
# Optional: Create faceted plots by forest type
p_facet <- ggplot(as.data.frame(hex_summary),
aes(x = mean_biomass, fill = forest_type_label)) +
geom_histogram(bins = 50, alpha = 0.7) +
facet_wrap(~forest_type_label, scales = "free_y") +
labs(title = "Distribution of Mean Biomass Across Hexagons",
x = "Mean Biomass (Mg/ha)", y = "Number of Hexagons",
fill = "Forest Type") +
theme_minimal() +
scale_fill_manual(values = c("Broadleaf" = "#2E7D32",
"Needleleaf" = "#1565C0",
"Mixed Forest" = "orange"))
print(p_facet)
print(p_facet)
ggsave("Data/hexagon_biomass_distribution_faceted.png", p_facet, width = 12, height = 6)
# Step 3: Now mask biomass by disturbance
biomass_undisturbed <- mask(Biomass2010_aligned,
undisturbed,
maskvalues = c(0, NA))
# Step 4: Stack and extract values
biomass_forest_stack <- c(biomass_undisturbed[[1]], EEA_forest_type_aligned)
names(biomass_forest_stack) <- c("biomass", "forest_type")
plot(biomass_forest_stack)
Hex_italy
# ============================================================================
# Function to extract data for a single hexagon
# ============================================================================
extract_hex_data <- function(hex_idx, hex_geom, raster_stack) {
tryCatch({
# Extract raster values within this hexagon
hex_vals <- extract(raster_stack,
hex_geom,
ID = FALSE,
cells = FALSE,
xy = FALSE)
# Convert to data.table
dt <- data.table(hex_vals)
# Filter valid data
dt <- dt[!is.na(biomass) & !is.na(forest_type) &
forest_type %in% c(1, 2, 3) & biomass > 0]
# Add hexagon ID
if(nrow(dt) > 0) {
dt[, hex_ID := hex_idx]
return(dt)
} else {
return(NULL)
}
}, error = function(e) {
warning(sprintf("Error processing hexagon %d: %s", hex_idx, e$message))
return(NULL)
})
}
# ============================================================================
# OPTION 1: Sequential processing (safer, easier to debug)
# ============================================================================
cat("Processing", nrow(Hex_italy), "hexagons sequentially...\n")
all_results <- vector("list", nrow(Hex_italy))
for(i in 1:nrow(Hex_italy)) {
if(i %% 100 == 0) {
cat(sprintf("Processing hexagon %d/%d (%.1f%%)\n",
i, nrow(Hex_italy), 100*i/nrow(Hex_italy)))
}
all_results[[i]] <- extract_hex_data(Hex_italy$hex_ID[i],
Hex_italy[i, ],
biomass_forest_stack)
}
cat("Combining results...\n")
biomass_hex_dt <- rbindlist(all_results[!sapply(all_results, is.null)])
# Add forest type labels
biomass_hex_dt[, forest_type_label := fcase(
forest_type == 1, "Broadleaf",
forest_type == 2, "Needleleaf",
forest_type == 3, "Mixed Forest",
default = NA_character_
)]
cat("Total valid pixels across all hexagons:", nrow(biomass_hex_dt), "\n")
cat("Number of hexagons with data:", length(unique(biomass_hex_dt$hex_id)), "\n")
fwrite(biomass_hex_dt, "Data/biomass_by_hexagon_completeUndisturbed.csv")
# 2. Summary statistics by hexagon and forest type
hex_summary <- biomass_hex_dt[, .(
n_pixels = .N,
mean_biomass = mean(biomass),
median_biomass = median(biomass),
sd_biomass = sd(biomass),
min_biomass = min(biomass),
max_biomass = max(biomass)
# total_biomass = sum(biomass)
), by = .(hex_ID, forest_type_label)]
fwrite(hex_summary, "Data/biomass_by_hexagon_summaryUndisturbed.csv")
# 3. Summary by hexagon (all forest types combined)
hex_summary_total <- biomass_hex_dt[, .(
n_pixels = .N,
mean_biomass = mean(biomass),
median_biomass = median(biomass),
# total_biomass = sum(biomass),
n_broadleaf = sum(forest_type == 1),
n_needleleaf = sum(forest_type == 2),
n_mixed = sum(forest_type == 3)
), by = hex_ID]
fwrite(hex_summary_total, "Data/biomass_by_hexagon_totalUndisturbed.csv")
# 4. Merge summary back to spatial hexagons for mapping
Hex_with_biomass <- merge(Hex_italy, hex_summary_total, by = "hex_ID", all.x = TRUE)
Hex_with_biomass <- Hex_with_biomass |> select(-hex_id)
st_write(Hex_with_biomass, "Data/grid_forest_with_biomassUndisturbed.gpkg", delete_dsn = TRUE)
Hex_with_biomass2 <- merge(Hex_italy, hex_summary, by = "hex_ID", all.x = TRUE)
Hex_with_biomass2 <- Hex_with_biomass2 |> select(-hex_id)
st_write(Hex_with_biomass2, "Data/grid_forest_with_biomassTypeUndisturbed.gpkg", delete_dsn = TRUE)
# Plot density for an example hexagon
example_hex_ID <- 25#10
biomass_df_hex <- as.data.frame(biomass_hex_dt[hex_ID == example_hex_ID])
if(nrow(biomass_df_hex) > 0) {
p_hex <- ggplot(biomass_df_hex, aes(x = biomass, fill = forest_type_label)) +
geom_density(alpha = 0.5) +
labs(title = paste("Biomass Distribution - Hexagon", example_hex_ID),
subtitle = paste("n =", format(nrow(biomass_df_hex), big.mark = ",")),
x = "Biomass (Mg/ha)", y = "Density", fill = "Forest Type") +
theme_minimal() +
scale_fill_manual(values = c("Broadleaf" = "#2E7D32",
"Needleleaf" = "#1565C0",
"Mixed Forest" = "orange"))
print(p_hex)
ggsave("Data/example_hexagon_biomass_densityUndisturbed.png", p_hex, width = 8, height = 5)
}
# Create map of total biomass by hexagon
library(tmap)
map_biomass <- tm_shape(Hex_with_biomass) +
tm_fill("mean_biomass",
style = "quantile",
palette = "YlOrRd",
title = "Mean Biomass\n(Mg/ha)") +
tm_borders(alpha = 0.3) +
tm_layout(title = "Total Disturbed Biomass by Hexagon",
legend.outside = TRUE)
print(map_biomass)
tmap_save(map_biomass, "Data/biomass_by_hexagon_mapUndisturbed.png", width = 10, height = 8)
map_biomass <- tm_shape(Hex_with_biomass) +
tm_fill("mean_biomass",
style = "quantile",
palette = "YlOrRd",
title = "Mean Biomass\n(Mg/ha)") +
tm_borders(alpha = 0.3) +
tm_layout(title = "Total Unisturbed Biomass by Hexagon",
legend.outside = TRUE)
print(map_biomass)
tmap_save(map_biomass, "Data/biomass_by_hexagon_mapUndisturbed.png", width = 10, height = 8)
# Filter for only Broadleaf and Needleleaf
Hex_two_types <- Hex_with_biomass2 %>%
filter(forest_type_label %in% c("Broadleaf", "Needleleaf", "Mixed Forest"))
# Create faceted map
map_biomass_two_facets <- tm_shape(Hex_two_types) +
tm_fill("mean_biomass",
style = "quantile",
palette = "YlOrRd",
title = "Mean Biomass\n(Mg/ha)") +
tm_borders(alpha = 0.3) +
tm_facets(by = "forest_type_label",
nrow = 1,
free.coords = FALSE) +
tm_layout(title = "Total Unisturbed Biomass: Broadleaf vs Needleleaf",
legend.outside = TRUE,
panel.labels = c("Broadleaf", "Needleleaf", "Mixed Forest"))
print(map_biomass_two_facets)
tmap_save(map_biomass_two_facets, "Data/biomass_broadleaf_needleleaf_mapUndisturbed.png",
width = 12, height = 6)
# Optional: Create faceted plots by forest type
p_facet <- ggplot(as.data.frame(hex_summary),
aes(x = mean_biomass, fill = forest_type_label)) +
geom_histogram(bins = 50, alpha = 0.7) +
facet_wrap(~forest_type_label, scales = "free_y") +
labs(title = "Distribution of Mean Biomass Across Hexagons",
x = "Mean Biomass (Mg/ha)", y = "Number of Hexagons",
fill = "Forest Type") +
theme_minimal() +
scale_fill_manual(values = c("Broadleaf" = "#2E7D32",
"Needleleaf" = "#1565C0",
"Mixed Forest" = "orange"))
print(p_facet)
ggsave("Data/hexagon_biomass_distribution_facetedUndisturbed.png", p_facet, width = 12, height = 6)
